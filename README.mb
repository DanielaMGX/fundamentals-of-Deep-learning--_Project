# fundamentals-of-Deep-learning_Project


en este repositorio Se implementan los modelos MLP y CNN, se preprocesan los datos, se entrenan, se eval√∫an y se analizan los resultados. El cuaderno tambi√©n incluye arquitecturas de modelos, m√©tricas de rendimiento y visualizaciones de conjuntos de datos.
en el repositorio tambi√©n se incluye el informe del proyecto.
## video sustentaci√≥n :video_camera:
:link:[Video](https://youtu.be/r_xX7zw7Y2k)https://youtu.be/r_xX7zw7Y2k

## Comenzando üöÄ

_Estas instrucciones te permitir√°n obtener una copia del proyecto en funcionamiento en tu m√°quina local para prop√≥sitos de desarrollo y pruebas._


 ### Pre-requisitos üìã

Para ejecutar el Jupyter Notebook, necesitar√°s:

* Jupyter Notebook: Puedes instalar Jupyter Notebook utilizando Anaconda o directamente con pip. Consulta la documentaci√≥n oficial de Jupyter Notebook para obtener instrucciones de instalaci√≥n.

* Bibliotecas de Python: El notebook requiere varias bibliotecas de Python como TensorFlow, Keras, NumPy y Matplotlib. Puedes instalarlas utilizando pip o conda. Aqu√≠ tienes un ejemplo de comando para instalar las bibliotecas necesarias:

  ```
  pip install tensorflow keras numpy matplotlib
  ```

### Instalaci√≥n üîß

1. Clona el repositorio:

   ```
   git clone https://github.com/tunombredeusuario/reconocimiento-de-lenguaje-de-se√±as.git
   ```

2. Ve al directorio del proyecto:

   ```
   cd reconocimiento-de-lenguaje-de-se√±as
   ```

3. Inicia Jupyter Notebook:

   ```
   jupyter notebook
   ```

4. Abre el cuaderno `reconocimiento_de_lenguaje_de_se√±as.ipynb` desde la interfaz de Jupyter Notebook.

5. Ejecuta las celdas del cuaderno de forma secuencial para ejecutar el c√≥digo, entrenar los modelos y analizar los resultados.

6. Sigue las instrucciones y comentarios proporcionados en el cuaderno para comprender el c√≥digo y realizar las modificaciones necesarias.

## Construido con üõ†Ô∏è

* Jupyter Notebook - El entorno de desarrollo para ejecutar el cuaderno y el c√≥digo.
* TensorFlow - La biblioteca de aprendizaje profundo utilizada para implementar los modelos MLP y CNN.
* Keras - La API de redes neuronales de alto nivel utilizada para construir el modelo CNN.
* NumPy - La biblioteca utilizada para c√°lculos num√©ricos y operaciones de matriz.
* Matplotlib - La biblioteca utilizada para visualizaci√≥n de datos.

## Autores ‚úíÔ∏è

* **Laura Daniela Monsalve G√≥mez** - [danielamgx](https://github.com/DanielaMGX)
* * **Mateo Rivera Monsalve** - [MateoRivera](https://github.com/MateoRivera)
* * * **Cristhian JavierGonzalez Rodriguez  ** - [kriz23](https://github.com/kriz23)

## Licencia üìÑ

Este proyecto se encuentra bajo la Licencia MIT: consulta el archivo [LICENSE.md](LICENSE) para obtener m√°s detalles.